"""
1. 파이썬 자료형(데이터형) => 객체 단위로 표현
    정수 : <class 'int'>
    실수 : <class 'float'>
    문자열 : <class 'str'>
    논리형 : <class 'bool'>
    ============== 기본 데이터형
    ** 파이썬 변수를 선언할 때 데이터형을 사용하지 않는다
    a = 10  => int
    b = 10.5  => float
    c = True  => bool
    d = "Hello"  => str

    ** 집합 자료형
        => Collection
        =============
        List
        Map
        Set
        ==============
        리스트형 => [] => ArrayList
        튜플형 => ()
        셀형 => {} => Set
        딕트형 => ["key","value"] => Map   : JSON 변경이 가능
        ================================

        데이터 저장 (메모리)
            = 한개의 데이터 저장 => 기본형 ( 정수, 실수, 문자열, 논리형)
                              => 변수 (변경이 가능한 값)
            = 여러개의 데이터 저장
        ⇒데이터 가공 (사용자 요청에 따라)
        = 연산자
            산술 연산자 ( + , - , * , / , % )
            => / => 정수/정수=실수
            => // => 정수//정수 = 정수
            => ** => 제곱 10**3 => 10^3 = 1000
            => +는 산술연산, 문자열 결합이 가능
                           =========
                           문자만 가능
                           "" + "" => 가능
                           "" + 5 => 불가능
                           => 기본 데이터형은 반드시 문자열로 변환후에 사용
                           str(5) => "5"
                           str(True) => "True"
                           ** True / False
            비교 연산자 : 조건문 / 반복문 조건 => True / False
                        == , != , < , < , <= , >=
            논리 연산자 : 조건이 두개일 경우 처리
                        and / or / not
            대입 연산자 : = , += , -=
                        ** ++,-- 는 존재하지 않는다
                        a++ (X)
                        a = a+1 ===> a+=1
            *** 형변환
                =====
                문자열 변환 : str(데이터형) => String.valueOf()
                정수 변환 : int(문자열) => Integer.parseInt()
                실수 변환 : float(문자열) => Double.parseDouble()
                논리형 변환 : bool(정수,실수)
                            bool(1) ==> True
                            bool(0) => False
                            bool(1.0) => True
                            bool(0.0) => False
                            *** 0, 0.0을 제외한 모든 수는 True
                *** 변환이 많은 경우
                    =============================================
                    = 사용자 입력값을 받는 경우 : input()
                                              int(input())
                    = 웹에서 데이터를 받는 경우 : request.Get['page']
                                              request.Post['fd']
                    ================================== 문자열
        = 제어문 : 흐름 => 반복 , 조건에 맞는 내용만 출력
            1) 조건문
                = 단일 조건문
                    형식)
                        if 조건문 :
                            처리문장 => 들여쓰기, ; 을 사용하지 않는다
                            ====== 조건이 True일 경우에 처리
                = 선택 조건문
                    if 조건문 :
                        처리문장
                    else :
                        처리문장
                =다중 조건문 : 해당 조건에 맞는 내용 한개만 수행
                    if 조건문 :
                        처리문장 => 조건이 True면 수행 후 종료
                    elif 조건문:
                        처리문장
            2) 반복문
                while / for
                while : 반복 횟수가 없는 경우 =
                while True :
                    반복처리문장

                초기값 === 1
                while 조건:  == 2 : True[3 이동] / False[종료]
                    처리문장  == 3
                    증가식    == 4 => 조건문 이동
                1 => 2 => 3=> 4 =>
                     2 => 3=> 4 =>
                     2 => 3=> 4=> ....
                     2번이 False면 종료
            3) 반복 제어문
        ============ + 함수  / 종료가 없는 프로그램 : 예외처리
        데이터 출력 (도스  / 웹(브라우저) ⇒ 장고 / 플라스크 )
"""
"""
# 단을 입력을 받아서 구구단 출력
dan = input("2~9사이의 정수를 입력:") #input(str=>int변환)
print(type(dan))  #type은 데이터형 확인
i = 1
while i <= 9 :
     print(f"{dan}*{i}={dan*i}")
   # i = i + 1
     i =+ 1
"""

"""
    for : 반복횟수가 지정된 경우에 주로 사용
    => for in
    => for 받는 변수 in range()
                      ======== 
                      (시작,종료,증가)(start:stop:step)
                           === -1
                      range(1,100) => 1...99, 1씩 증가
                      range(1,101,2) => 1,3,5...99  
       for 받는 변수 in 집합데이터형 (list,set,튜플...)
"""
"""
# 1~10
for i in range(1,11):  # 마지막 수는 end-1
    print(f"i={i}",end=" ") #end가 없는 경우에는 \n이 디폴트
"""
"""
for _ in range(10):    #10번 반복
    print("Hello Python")

list = ["팜하니","다니엘","혜인","해린","민지"]

for name in list:
    print(name)
"""
#1~100까지 합, 짝수합, 홀수합 => 출력
sum = 0
even = 0
odd = 0
for i in range(1,101) :
    if i%2 == 0 :
        even += i
    else :
        odd += i
    sum += i
print(f"1~100사이의 합:{sum}")
print(f"1~100사이의 짝수합:{even}")
print(f"1~100사이의 홀수합:{odd}")
